<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{_CPTGradientElement=&quot;color&quot;{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}&quot;position&quot;f&quot;nextElement&quot;^{_CPTGradientElement}}' name='CPTGradientElement'>
<field type='{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}' name='color' declared_type='CPTRGBAColor'/>
<field type='f' name='position' declared_type='CGFloat'/>
<field type='^{_CPTGradientElement={_CPTRGBAColor=ffff}f^{_CPTGradientElement}}' name='nextElement' declared_type='struct _CPTGradientElement*'/>
</struct>
<struct type='{_CPTNumericDataType=&quot;dataTypeFormat&quot;i&quot;sampleBytes&quot;I&quot;byteOrder&quot;i}' name='CPTNumericDataType'>
<field type='i' name='dataTypeFormat' declared_type='CPTDataTypeFormat'/>
<field type='L' name='sampleBytes' declared_type='size_t'/>
<field type='l' name='byteOrder' declared_type='CFByteOrder'/>
</struct>
<struct type='{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}' name='CPTRGBAColor'>
<field type='f' name='red' declared_type='CGFloat'/>
<field type='f' name='green' declared_type='CGFloat'/>
<field type='f' name='blue' declared_type='CGFloat'/>
<field type='f' name='alpha' declared_type='CGFloat'/>
</struct>
<constant type='@' name='CPTBarPlotBindingBarBases' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTBarPlotBindingBarLocations' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTBarPlotBindingBarTips' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTDataException' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTException' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTGraphNeedsRedrawNotification' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTLegendNeedsLayoutForPlotNotification' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTLegendNeedsRedrawForPlotNotification' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTLegendNeedsReloadEntriesForPlotNotification' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTNumericDataException' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTPieChartBindingPieSliceWidthValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTPlotSpaceCoordinateMappingDidChangeNotification' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTRangePlotBindingHighValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTRangePlotBindingLeftValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTRangePlotBindingLowValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTRangePlotBindingRightValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTRangePlotBindingXValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTRangePlotBindingYValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTScatterPlotBindingPlotSymbols' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTScatterPlotBindingXValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTScatterPlotBindingYValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTTradingRangePlotBindingCloseValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTTradingRangePlotBindingHighValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTTradingRangePlotBindingLowValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTTradingRangePlotBindingOpenValues' declared_type='NSString*' const='true'/>
<constant type='@' name='CPTTradingRangePlotBindingXValues' declared_type='NSString*' const='true'/>
<constant type='@' name='kCPTDarkGradientTheme' declared_type='NSString*' const='true'/>
<constant type='@' name='kCPTPlainBlackTheme' declared_type='NSString*' const='true'/>
<constant type='@' name='kCPTPlainWhiteTheme' declared_type='NSString*' const='true'/>
<constant type='@' name='kCPTSlateTheme' declared_type='NSString*' const='true'/>
<constant type='@' name='kCPTStocksTheme' declared_type='NSString*' const='true'/>
<constant type='f' name='kCPTTextLayerMarginWidth' declared_type='CGFloat' const='true'/>
<enum value='5' name='CPTAlignmentBottom'/>
<enum value='1' name='CPTAlignmentCenter'/>
<enum value='0' name='CPTAlignmentLeft'/>
<enum value='4' name='CPTAlignmentMiddle'/>
<enum value='2' name='CPTAlignmentRight'/>
<enum value='3' name='CPTAlignmentTop'/>
<enum value='3' name='CPTAxisLabelingPolicyAutomatic'/>
<enum value='4' name='CPTAxisLabelingPolicyEqualDivisions'/>
<enum value='2' name='CPTAxisLabelingPolicyFixedInterval'/>
<enum value='1' name='CPTAxisLabelingPolicyLocationsProvided'/>
<enum value='0' name='CPTAxisLabelingPolicyNone'/>
<enum value='2' name='CPTBarPlotFieldBarBase'/>
<enum value='0' name='CPTBarPlotFieldBarLocation'/>
<enum value='1' name='CPTBarPlotFieldBarTip'/>
<enum value='1' name='CPTChromaticBlendingMode'/>
<enum value='4' name='CPTComplexFloatingPointDataType'/>
<enum value='0' name='CPTCoordinateX'/>
<enum value='1' name='CPTCoordinateY'/>
<enum value='2' name='CPTCoordinateZ'/>
<enum value='5' name='CPTDecimalDataType'/>
<enum value='1' name='CPTErrorBarTypeConstantRatio'/>
<enum value='2' name='CPTErrorBarTypeConstantValue'/>
<enum value='0' name='CPTErrorBarTypeCustom'/>
<enum value='3' name='CPTFloatingPointDataType'/>
<enum value='0' name='CPTGradientTypeAxial'/>
<enum value='1' name='CPTGradientTypeRadial'/>
<enum value='4' name='CPTGraphLayerTypeAxisLabels'/>
<enum value='2' name='CPTGraphLayerTypeAxisLines'/>
<enum value='5' name='CPTGraphLayerTypeAxisTitles'/>
<enum value='1' name='CPTGraphLayerTypeMajorGridLines'/>
<enum value='0' name='CPTGraphLayerTypeMinorGridLines'/>
<enum value='3' name='CPTGraphLayerTypePlots'/>
<enum value='1' name='CPTIntegerDataType'/>
<enum value='2' name='CPTInverseChromaticBlendingMode'/>
<enum value='9' name='CPTLineCapTypeBar'/>
<enum value='10' name='CPTLineCapTypeCross'/>
<enum value='12' name='CPTLineCapTypeCustom'/>
<enum value='6' name='CPTLineCapTypeDiamond'/>
<enum value='5' name='CPTLineCapTypeEllipse'/>
<enum value='8' name='CPTLineCapTypeHexagon'/>
<enum value='0' name='CPTLineCapTypeNone'/>
<enum value='1' name='CPTLineCapTypeOpenArrow'/>
<enum value='7' name='CPTLineCapTypePentagon'/>
<enum value='4' name='CPTLineCapTypeRectangle'/>
<enum value='11' name='CPTLineCapTypeSnow'/>
<enum value='2' name='CPTLineCapTypeSolidArrow'/>
<enum value='3' name='CPTLineCapTypeSweptArrow'/>
<enum value='0' name='CPTLinearBlendingMode'/>
<enum value='2' name='CPTNumericTypeDouble'/>
<enum value='1' name='CPTNumericTypeFloat'/>
<enum value='0' name='CPTNumericTypeInteger'/>
<enum value='0' name='CPTPieChartFieldSliceWidth'/>
<enum value='1' name='CPTPieChartFieldSliceWidthNormalized'/>
<enum value='2' name='CPTPieChartFieldSliceWidthSum'/>
<enum value='0' name='CPTPieDirectionClockwise'/>
<enum value='1' name='CPTPieDirectionCounterClockwise'/>
<enum value='0' name='CPTPlotCachePrecisionAuto'/>
<enum value='2' name='CPTPlotCachePrecisionDecimal'/>
<enum value='1' name='CPTPlotCachePrecisionDouble'/>
<enum value='2' name='CPTPlotRangeComparisonResultNumberAboveRange'/>
<enum value='0' name='CPTPlotRangeComparisonResultNumberBelowRange'/>
<enum value='1' name='CPTPlotRangeComparisonResultNumberInRange'/>
<enum value='8' name='CPTPlotSymbolTypeCross'/>
<enum value='12' name='CPTPlotSymbolTypeCustom'/>
<enum value='10' name='CPTPlotSymbolTypeDash'/>
<enum value='3' name='CPTPlotSymbolTypeDiamond'/>
<enum value='2' name='CPTPlotSymbolTypeEllipse'/>
<enum value='7' name='CPTPlotSymbolTypeHexagon'/>
<enum value='0' name='CPTPlotSymbolTypeNone'/>
<enum value='6' name='CPTPlotSymbolTypePentagon'/>
<enum value='9' name='CPTPlotSymbolTypePlus'/>
<enum value='1' name='CPTPlotSymbolTypeRectangle'/>
<enum value='11' name='CPTPlotSymbolTypeSnow'/>
<enum value='5' name='CPTPlotSymbolTypeStar'/>
<enum value='4' name='CPTPlotSymbolTypeTriangle'/>
<enum value='2' name='CPTRangePlotFieldHigh'/>
<enum value='4' name='CPTRangePlotFieldLeft'/>
<enum value='3' name='CPTRangePlotFieldLow'/>
<enum value='5' name='CPTRangePlotFieldRight'/>
<enum value='0' name='CPTRangePlotFieldX'/>
<enum value='1' name='CPTRangePlotFieldY'/>
<enum value='1' name='CPTRectAnchorBottom'/>
<enum value='0' name='CPTRectAnchorBottomLeft'/>
<enum value='2' name='CPTRectAnchorBottomRight'/>
<enum value='8' name='CPTRectAnchorCenter'/>
<enum value='3' name='CPTRectAnchorLeft'/>
<enum value='4' name='CPTRectAnchorRight'/>
<enum value='6' name='CPTRectAnchorTop'/>
<enum value='5' name='CPTRectAnchorTopLeft'/>
<enum value='7' name='CPTRectAnchorTopRight'/>
<enum value='2' name='CPTScaleTypeAngular'/>
<enum value='4' name='CPTScaleTypeCategory'/>
<enum value='3' name='CPTScaleTypeDateTime'/>
<enum value='0' name='CPTScaleTypeLinear'/>
<enum value='1' name='CPTScaleTypeLog'/>
<enum value='0' name='CPTScatterPlotFieldX'/>
<enum value='1' name='CPTScatterPlotFieldY'/>
<enum value='2' name='CPTScatterPlotInterpolationHistogram'/>
<enum value='0' name='CPTScatterPlotInterpolationLinear'/>
<enum value='1' name='CPTScatterPlotInterpolationStepped'/>
<enum value='-1' name='CPTSignNegative'/>
<enum value='0' name='CPTSignNone'/>
<enum value='1' name='CPTSignPositive'/>
<enum value='1' name='CPTTextAlignmentCenter'/>
<enum value='0' name='CPTTextAlignmentLeft'/>
<enum value='2' name='CPTTextAlignmentRight'/>
<enum value='4' name='CPTTradingRangePlotFieldClose'/>
<enum value='2' name='CPTTradingRangePlotFieldHigh'/>
<enum value='3' name='CPTTradingRangePlotFieldLow'/>
<enum value='1' name='CPTTradingRangePlotFieldOpen'/>
<enum value='0' name='CPTTradingRangePlotFieldX'/>
<enum value='1' name='CPTTradingRangePlotStyleCandleStick'/>
<enum value='0' name='CPTTradingRangePlotStyleOHLC'/>
<enum value='0' name='CPTUndefinedDataType'/>
<enum value='2' name='CPTUnsignedIntegerDataType'/>
<enum value='0' name='CPT_SDK_SUPPORTS_WEAK'/>
<function name='AddRoundedRectPath'>
<arg type='^{CGContext=}' name='context' declared_type='CGContextRef'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg type='f' name='cornerRadius' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CPTAlignIntegralPointToUserSpace'>
<arg type='^{CGContext=}' name='context' declared_type='CGContextRef'/>
<arg type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='CPTAlignPointToUserSpace'>
<arg type='^{CGContext=}' name='context' declared_type='CGContextRef'/>
<arg type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='CPTAlignRectToUserSpace'>
<arg type='^{CGContext=}' name='context' declared_type='CGContextRef'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='r' declared_type='CGRect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CPTAlignSizeToUserSpace'>
<arg type='^{CGContext=}' name='context' declared_type='CGContextRef'/>
<arg type='{CGSize=ff}' name='s' declared_type='CGSize'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</function>
<function name='CPTDataType'>
<arg type='i' name='format' declared_type='CPTDataTypeFormat'/>
<arg type='L' name='sampleBytes' declared_type='size_t'/>
<arg type='l' name='byteOrder' declared_type='CFByteOrder'/>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</function>
<function name='CPTDataTypeEqualToDataType'>
<arg type='{_CPTNumericDataType=iIi}' name='dataType1' declared_type='CPTNumericDataType'/>
<arg type='{_CPTNumericDataType=iIi}' name='dataType2' declared_type='CPTNumericDataType'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDataTypeIsSupported'>
<arg type='{_CPTNumericDataType=iIi}' name='format' declared_type='CPTNumericDataType'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDataTypeStringFromDataType'>
<arg type='{_CPTNumericDataType=iIi}' name='dataType' declared_type='CPTNumericDataType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTDataTypeWithDataTypeString'>
<arg type='@' name='dataTypeString' declared_type='NSString*'/>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</function>
<function name='CPTDecimalAdd'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalCGFloatValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='CPTDecimalCharValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='c' declared_type='int8_t'/>
</function>
<function name='CPTDecimalDivide'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='numerator' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='denominator' declared_type='NSDecimal'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalDoubleValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CPTDecimalEquals'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalFloatValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='f' declared_type='float'/>
</function>
<function name='CPTDecimalFromCGFloat'>
<arg type='f' name='f' declared_type='CGFloat'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromChar'>
<arg type='c' name='i' declared_type='int8_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromDouble'>
<arg type='d' name='d' declared_type='double'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromFloat'>
<arg type='f' name='f' declared_type='float'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromInt'>
<arg type='i' name='i' declared_type='int'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromInteger'>
<arg type='i' name='i' declared_type='NSInteger'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromLong'>
<arg type='i' name='i' declared_type='int32_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromLongLong'>
<arg type='q' name='i' declared_type='int64_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromShort'>
<arg type='s' name='i' declared_type='int16_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromString'>
<arg type='@' name='stringRepresentation' declared_type='NSString*'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedChar'>
<arg type='C' name='i' declared_type='uint8_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedInt'>
<arg type='I' name='i' declared_type='unsigned int'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedInteger'>
<arg type='I' name='i' declared_type='NSUInteger'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedLong'>
<arg type='I' name='i' declared_type='uint32_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedLongLong'>
<arg type='Q' name='i' declared_type='uint64_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedShort'>
<arg type='S' name='i' declared_type='uint16_t'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalGreaterThan'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalGreaterThanOrEqualTo'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalIntValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='i' declared_type='int'/>
</function>
<function name='CPTDecimalIntegerValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='i' declared_type='NSInteger'/>
</function>
<function name='CPTDecimalLessThan'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalLessThanOrEqualTo'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalLongLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='q' declared_type='int64_t'/>
</function>
<function name='CPTDecimalLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='i' declared_type='int32_t'/>
</function>
<function name='CPTDecimalMultiply'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalNaN'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalShortValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='s' declared_type='int16_t'/>
</function>
<function name='CPTDecimalStringValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTDecimalSubtract'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='leftOperand' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='rightOperand' declared_type='NSDecimal'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalUnsignedCharValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='C' declared_type='uint8_t'/>
</function>
<function name='CPTDecimalUnsignedIntValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='CPTDecimalUnsignedIntegerValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='CPTDecimalUnsignedLongLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='Q' declared_type='uint64_t'/>
</function>
<function name='CPTDecimalUnsignedLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='CPTDecimalUnsignedShortValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='decimalNumber' declared_type='NSDecimal'/>
<retval type='S' declared_type='uint16_t'/>
</function>
<function name='CPTExpandedRange'>
<arg type='{_NSRange=II}' name='range' declared_type='NSRange'/>
<arg type='i' name='expandBy' declared_type='NSInteger'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='CPTGetCurrentContext'>
<retval type='^{CGContext=}' declared_type='CGContextRef'/>
</function>
<function name='CPTOrthogonalCoordinate'>
<arg type='i' name='coord' declared_type='CPTCoordinate'/>
<retval type='i' declared_type='CPTCoordinate'/>
</function>
<function name='CPTPopCGContext'>
<retval type='v' declared_type='void'/>
</function>
<function name='CPTPushCGContext'>
<arg type='^{CGContext=}' name='context' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CPTRGBAColorFromCGColor'>
<arg type='^{CGColor=}' name='color' declared_type='CGColorRef'/>
<retval type='{_CPTRGBAColor=ffff}' declared_type='CPTRGBAColor'/>
</function>
<function name='CPTStringFromPoint'>
<arg type='{CGPoint=ff}' name='p' declared_type='CGPoint'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTStringFromRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='r' declared_type='CGRect'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTStringFromSize'>
<arg type='{CGSize=ff}' name='s' declared_type='CGSize'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CreateRoundedRectPath'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' declared_type='CGRect'/>
<arg type='f' name='cornerRadius' declared_type='CGFloat'/>
<retval type='^{CGPath=}' already_retained='true' declared_type='CGPathRef'/>
</function>
<class name='CPTAnnotation'>
<method selector='annotationHostLayer'>
<retval type='@' declared_type='CPTAnnotationHostLayer*'/>
</method>
<method selector='contentAnchorPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='contentLayer'>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='displacement'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='positionContentLayer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAnnotationHostLayer:'>
<arg type='@' name='annotationHostLayer' index='0' declared_type='CPTAnnotationHostLayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentAnchorPoint:'>
<arg type='{CGPoint=ff}' name='contentAnchorPoint' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentLayer:'>
<arg type='@' name='contentLayer' index='0' declared_type='CPTLayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplacement:'>
<arg type='{CGPoint=ff}' name='displacement' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg type='f' name='rotation' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTAnnotationHostLayer'>
<method selector='addAnnotation:'>
<arg type='@' name='annotation' index='0' declared_type='CPTAnnotation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='annotations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeAllAnnotations'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAnnotation:'>
<arg type='@' name='annotation' index='0' declared_type='CPTAnnotation*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTAxis'>
<method selector='addBackgroundLimitBand:'>
<arg type='@' name='limitBand' index='0' declared_type='CPTLimitBand*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alternatingBandFills'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='axisLabels'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='axisLineCapMax'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='axisLineCapMin'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='axisLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='axisTitle'>
<retval type='@' declared_type='CPTAxisTitle*'/>
</method>
<method selector='backgroundLimitBands'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='coordinate'>
<retval type='i' declared_type='CPTCoordinate'/>
</method>
<method selector='defaultTitleLocation'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='drawBackgroundBandsInContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawBackgroundLimitsInContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawGridLinesInContext:isMajor:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<arg type='B' name='major' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredMajorTickLocations:'>
<arg type='@' name='allLocations' index='0' declared_type='NSSet*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='filteredMinorTickLocations:'>
<arg type='@' name='allLocations' index='0' declared_type='NSSet*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='gridLinesRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='labelAlignment'>
<retval type='i' declared_type='CPTAlignment'/>
</method>
<method selector='labelExclusionRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='labelFormatter'>
<retval type='@' declared_type='NSNumberFormatter*'/>
</method>
<method selector='labelOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelShadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='labelTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='labelingOrigin'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='labelingPolicy'>
<retval type='i' declared_type='CPTAxisLabelingPolicy'/>
</method>
<method selector='majorGridLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='majorGridLines'>
<retval type='@' declared_type='CPTGridLines*'/>
</method>
<method selector='majorIntervalLength'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='majorTickLength'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='majorTickLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='majorTickLocations'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='minorGridLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='minorGridLines'>
<retval type='@' declared_type='CPTGridLines*'/>
</method>
<method selector='minorTickAxisLabels'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='minorTickLabelAlignment'>
<retval type='i' declared_type='CPTAlignment'/>
</method>
<method selector='minorTickLabelFormatter'>
<retval type='@' declared_type='NSNumberFormatter*'/>
</method>
<method selector='minorTickLabelOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minorTickLabelRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minorTickLabelTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='minorTickLength'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minorTickLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='minorTickLocations'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='minorTicksPerInterval'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='needsRelabel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='plotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='preferredNumberOfMajorTicks'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='relabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeBackgroundLimitBand:'>
<arg type='@' name='limitBand' index='0' declared_type='CPTLimitBand*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='separateLayers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlternatingBandFills:'>
<arg type='@' name='alternatingBandFills' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLabels:'>
<arg type='@' name='axisLabels' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLineCapMax:'>
<arg type='@' name='axisLineCapMax' index='0' declared_type='CPTLineCap*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLineCapMin:'>
<arg type='@' name='axisLineCapMin' index='0' declared_type='CPTLineCap*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLineStyle:'>
<arg type='@' name='axisLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisTitle:'>
<arg type='@' name='axisTitle' index='0' declared_type='CPTAxisTitle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCoordinate:'>
<arg type='i' name='coordinate' index='0' declared_type='CPTCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGridLinesRange:'>
<arg type='@' name='gridLinesRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelAlignment:'>
<arg type='i' name='labelAlignment' index='0' declared_type='CPTAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelExclusionRanges:'>
<arg type='@' name='labelExclusionRanges' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelFormatter:'>
<arg type='@' name='labelFormatter' index='0' declared_type='NSNumberFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelOffset:'>
<arg type='f' name='labelOffset' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelRotation:'>
<arg type='f' name='labelRotation' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelShadow:'>
<arg type='@' name='labelShadow' index='0' declared_type='CPTShadow*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelTextStyle:'>
<arg type='@' name='labelTextStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelingOrigin:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='labelingOrigin' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelingPolicy:'>
<arg type='i' name='labelingPolicy' index='0' declared_type='CPTAxisLabelingPolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorGridLineStyle:'>
<arg type='@' name='majorGridLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorIntervalLength:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='majorIntervalLength' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorTickLength:'>
<arg type='f' name='majorTickLength' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorTickLineStyle:'>
<arg type='@' name='majorTickLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorTickLocations:'>
<arg type='@' name='majorTickLocations' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorGridLineStyle:'>
<arg type='@' name='minorGridLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickAxisLabels:'>
<arg type='@' name='minorTickAxisLabels' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelAlignment:'>
<arg type='i' name='minorTickLabelAlignment' index='0' declared_type='CPTAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelFormatter:'>
<arg type='@' name='minorTickLabelFormatter' index='0' declared_type='NSNumberFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelOffset:'>
<arg type='f' name='minorTickLabelOffset' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelRotation:'>
<arg type='f' name='minorTickLabelRotation' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelTextStyle:'>
<arg type='@' name='minorTickLabelTextStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLength:'>
<arg type='f' name='minorTickLength' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLineStyle:'>
<arg type='@' name='minorTickLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLocations:'>
<arg type='@' name='minorTickLocations' index='0' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTicksPerInterval:'>
<arg type='I' name='minorTicksPerInterval' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsRelabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotArea:'>
<arg type='@' name='plotArea' index='0' declared_type='CPTPlotArea*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSpace:'>
<arg type='@' name='plotSpace' index='0' declared_type='CPTPlotSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredNumberOfMajorTicks:'>
<arg type='I' name='preferredNumberOfMajorTicks' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparateLayers:'>
<arg type='B' name='separateLayers' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickDirection:'>
<arg type='i' name='tickDirection' index='0' declared_type='CPTSign'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' name='title' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleLocation:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='titleLocation' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleOffset:'>
<arg type='f' name='titleOffset' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleRotation:'>
<arg type='f' name='titleRotation' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextStyle:'>
<arg type='@' name='titleTextStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisibleRange:'>
<arg type='@' name='visibleRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickDirection'>
<retval type='i' declared_type='CPTSign'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleLocation'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='titleOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='titleRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='titleTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='updateMajorTickLabels'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateMinorTickLabels'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewPointForCoordinateDecimalNumber:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='coordinateDecimalNumber' index='0' declared_type='NSDecimal'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='visibleRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
</class>
<class name='CPTAxisLabel'>
<method selector='alignment'>
<retval type='i' declared_type='CPTAlignment'/>
</method>
<method selector='contentLayer'>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='initWithContentLayer:'>
<arg type='@' name='layer' index='0' declared_type='CPTLayer*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithText:textStyle:'>
<arg type='@' name='newText' index='0' declared_type='NSString*'/>
<arg type='@' name='style' index='1' declared_type='CPTTextStyle*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='positionBetweenViewPoint:andViewPoint:forCoordinate:inDirection:'>
<arg type='{CGPoint=ff}' name='firstPoint' index='0' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='secondPoint' index='1' declared_type='CGPoint'/>
<arg type='i' name='coordinate' index='2' declared_type='CPTCoordinate'/>
<arg type='i' name='direction' index='3' declared_type='CPTSign'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='positionRelativeToViewPoint:forCoordinate:inDirection:'>
<arg type='{CGPoint=ff}' name='point' index='0' declared_type='CGPoint'/>
<arg type='i' name='coordinate' index='1' declared_type='CPTCoordinate'/>
<arg type='i' name='direction' index='2' declared_type='CPTSign'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAlignment:'>
<arg type='i' name='alignment' index='0' declared_type='CPTAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentLayer:'>
<arg type='@' name='contentLayer' index='0' declared_type='CPTLayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg type='f' name='offset' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg type='f' name='rotation' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickLocation:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='tickLocation' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickLocation'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
</class>
<class name='CPTAxisSet'>
<method selector='axes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='relabelAxes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxes:'>
<arg type='@' name='axes' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' name='borderLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTBarPlot'>
<method selector='barBasesVary'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='barCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barOffset'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='barOffsetScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barWidth'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='barWidthScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barWidthsAreInViewCoordinates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='barsAreHorizontal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='baseValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='plotRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='setBarBasesVary:'>
<arg type='B' name='barBasesVary' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarCornerRadius:'>
<arg type='f' name='barCornerRadius' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarOffset:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='barOffset' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarOffsetScale:'>
<arg type='f' name='barOffsetScale' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidth:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='barWidth' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidthScale:'>
<arg type='f' name='barWidthScale' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidthsAreInViewCoordinates:'>
<arg type='B' name='barWidthsAreInViewCoordinates' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarsAreHorizontal:'>
<arg type='B' name='barsAreHorizontal' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseValue:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='baseValue' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' name='fill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' name='lineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotRange:'>
<arg type='@' name='plotRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='tubularBarPlotWithColor:horizontalBars:'>
<arg type='@' name='color' index='0' declared_type='CPTColor*'/>
<arg type='B' name='horizontal' index='1' declared_type='BOOL'/>
<retval type='@' declared_type='CPTBarPlot*'/>
</method>
</class>
<class name='CPTBorderedLayer'>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' name='borderLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' name='fill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTColor'>
<method class_method='true' selector='blackColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='blueColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='brownColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='cgColor'>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method class_method='true' selector='clearColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg type='f' name='alpha' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg type='^{CGColor=}' name='newCGColor' index='0' declared_type='CGColorRef'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='colorWithComponentRed:green:blue:alpha:'>
<arg type='f' name='red' index='0' declared_type='CGFloat'/>
<arg type='f' name='green' index='1' declared_type='CGFloat'/>
<arg type='f' name='blue' index='2' declared_type='CGFloat'/>
<arg type='f' name='alpha' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='colorWithGenericGray:'>
<arg type='f' name='gray' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='grayColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='greenColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='initWithCGColor:'>
<arg type='^{CGColor=}' name='cgColor' index='0' declared_type='CGColorRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithComponentRed:green:blue:alpha:'>
<arg type='f' name='red' index='0' declared_type='CGFloat'/>
<arg type='f' name='green' index='1' declared_type='CGFloat'/>
<arg type='f' name='blue' index='2' declared_type='CGFloat'/>
<arg type='f' name='alpha' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='redColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='uiColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
</class>
<class name='CPTColorSpace'>
<method selector='cgColorSpace'>
<retval type='^{CGColorSpace=}' declared_type='CGColorSpaceRef'/>
</method>
<method class_method='true' selector='genericRGBSpace'>
<retval type='@' declared_type='CPTColorSpace*'/>
</method>
<method selector='initWithCGColorSpace:'>
<arg type='^{CGColorSpace=}' name='colorSpace' index='0' declared_type='CGColorSpaceRef'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTConstraints'>
<method class_method='true' selector='constraintWithLowerOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method class_method='true' selector='constraintWithRelativeOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method class_method='true' selector='constraintWithUpperOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method selector='initWithLowerOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRelativeOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUpperOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToConstraint:'>
<arg type='@' name='otherConstraint' index='0' declared_type='CPTConstraints*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg type='f' name='lowerBound' index='0' declared_type='CGFloat'/>
<arg type='f' name='upperBound' index='1' declared_type='CGFloat'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTFill'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='theRect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='theContext' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='fillWithColor:'>
<arg type='@' name='aColor' index='0' declared_type='CPTColor*'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method class_method='true' selector='fillWithGradient:'>
<arg type='@' name='aGradient' index='0' declared_type='CPTGradient*'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method class_method='true' selector='fillWithImage:'>
<arg type='@' name='anImage' index='0' declared_type='CPTImage*'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='initWithColor:'>
<arg type='@' name='aColor' index='0' declared_type='CPTColor*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithGradient:'>
<arg type='@' name='aGradient' index='0' declared_type='CPTGradient*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:'>
<arg type='@' name='anImage' index='0' declared_type='CPTImage*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTGradient'>
<method selector='addColorStop:atPosition:'>
<arg type='@' name='color' index='0' declared_type='CPTColor*'/>
<arg type='f' name='position' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method class_method='true' selector='aquaNormalGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='aquaPressedGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='aquaSelectedGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='blendingMode'>
<retval type='i' declared_type='CPTGradientBlendingMode'/>
</method>
<method selector='drawSwatchInRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='gradientType'>
<retval type='i' declared_type='CPTGradientType'/>
</method>
<method selector='gradientWithAlphaComponent:'>
<arg type='f' name='alpha' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='gradientWithBeginningColor:endingColor:'>
<arg type='@' name='begin' index='0' declared_type='CPTColor*'/>
<arg type='@' name='end' index='1' declared_type='CPTColor*'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='gradientWithBeginningColor:endingColor:beginningPosition:endingPosition:'>
<arg type='@' name='begin' index='0' declared_type='CPTColor*'/>
<arg type='@' name='end' index='1' declared_type='CPTColor*'/>
<arg type='f' name='beginningPosition' index='2' declared_type='CGFloat'/>
<arg type='f' name='endingPosition' index='3' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='gradientWithBlendingMode:'>
<arg type='i' name='mode' index='0' declared_type='CPTGradientBlendingMode'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='hydrogenSpectrumGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='newColorAtPosition:'>
<arg type='f' name='position' index='0' declared_type='CGFloat'/>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method selector='newColorStopAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method class_method='true' selector='rainbowGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='removeColorStopAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='removeColorStopAtPosition:'>
<arg type='f' name='position' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='setAngle:'>
<arg type='f' name='angle' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGradientType:'>
<arg type='i' name='gradientType' index='0' declared_type='CPTGradientType'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sourceListSelectedGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='sourceListUnselectedGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='unifiedDarkGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='unifiedNormalGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='unifiedPressedGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method class_method='true' selector='unifiedSelectedGradient'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
</class>
<class name='CPTGraph'>
<method selector='addPlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPlot:toPlotSpace:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='@' name='space' index='1' declared_type='CPTPlotSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPlotSpace:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allPlotSpaces'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allPlots'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='applyTheme:'>
<arg type='@' name='theme' index='0' declared_type='CPTTheme*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='defaultPlotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertPlot:atIndex:intoPlotSpace:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<arg type='@' name='space' index='2' declared_type='CPTPlotSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='legend'>
<retval type='@' declared_type='CPTLegend*'/>
</method>
<method selector='legendAnchor'>
<retval type='i' declared_type='CPTRectAnchor'/>
</method>
<method selector='legendDisplacement'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='newAxisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='newPlotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='plotAreaFrame'>
<retval type='@' declared_type='CPTPlotAreaFrame*'/>
</method>
<method selector='plotAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='plotSpaceAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='plotSpaceWithIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='plotWithIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlotSpace:'>
<arg type='@' name='plotSpace' index='0' declared_type='CPTPlotSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlotWithIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisSet:'>
<arg type='@' name='axisSet' index='0' declared_type='CPTAxisSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLegend:'>
<arg type='@' name='legend' index='0' declared_type='CPTLegend*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLegendAnchor:'>
<arg type='i' name='legendAnchor' index='0' declared_type='CPTRectAnchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLegendDisplacement:'>
<arg type='{CGPoint=ff}' name='legendDisplacement' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotAreaFrame:'>
<arg type='@' name='plotAreaFrame' index='0' declared_type='CPTPlotAreaFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' name='title' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleDisplacement:'>
<arg type='{CGPoint=ff}' name='titleDisplacement' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitlePlotAreaFrameAnchor:'>
<arg type='i' name='titlePlotAreaFrameAnchor' index='0' declared_type='CPTRectAnchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextStyle:'>
<arg type='@' name='titleTextStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopDownLayerOrder:'>
<arg type='@' name='topDownLayerOrder' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleDisplacement'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='titlePlotAreaFrameAnchor'>
<retval type='i' declared_type='CPTRectAnchor'/>
</method>
<method selector='titleTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='topDownLayerOrder'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='CPTGraphHostingView'>
<method selector='allowPinchScaling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='collapsesLayers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hostedGraph'>
<retval type='@' declared_type='CPTGraph*'/>
</method>
<method selector='setAllowPinchScaling:'>
<arg type='B' name='allowPinchScaling' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCollapsesLayers:'>
<arg type='B' name='collapsesLayers' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHostedGraph:'>
<arg type='@' name='hostedGraph' index='0' declared_type='CPTGraph*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTGridLineGroup'>
<method selector='major'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='setMajor:'>
<arg type='B' name='major' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotArea:'>
<arg type='@' name='plotArea' index='0' declared_type='CPTPlotArea*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTGridLines'>
<method selector='axis'>
<retval type='@' declared_type='CPTAxis*'/>
</method>
<method selector='major'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAxis:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajor:'>
<arg type='B' name='major' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTImage'>
<method selector='drawInRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method class_method='true' selector='imageForPNGFile:'>
<arg type='@' name='path' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='CPTImage*'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg type='^{CGImage=}' name='anImage' index='0' declared_type='CGImageRef'/>
<retval type='@' declared_type='CPTImage*'/>
</method>
<method class_method='true' selector='imageWithCGImage:scale:'>
<arg type='^{CGImage=}' name='anImage' index='0' declared_type='CGImageRef'/>
<arg type='f' name='newScale' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='CPTImage*'/>
</method>
<method selector='initForPNGFile:'>
<arg type='@' name='path' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:'>
<arg type='^{CGImage=}' name='anImage' index='0' declared_type='CGImageRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:scale:'>
<arg type='^{CGImage=}' name='anImage' index='0' declared_type='CGImageRef'/>
<arg type='f' name='newScale' index='1' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTiled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setImage:'>
<arg type='^{CGImage=}' name='image' index='0' declared_type='CGImageRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScale:'>
<arg type='f' name='scale' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileAnchoredToContext:'>
<arg type='B' name='tileAnchoredToContext' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiled:'>
<arg type='B' name='tiled' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileAnchoredToContext'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTLayer'>
<method selector='applyMaskToContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applySublayerMaskToContext:forSublayer:withOffset:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<arg type='@' name='sublayer' index='1' declared_type='CPTLayer*'/>
<arg type='{CGPoint=ff}' name='offset' index='2' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentsScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='dataForPDFRepresentationOfLayer'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='graph'>
<retval type='@' declared_type='CPTGraph*'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageOfLayer'>
<retval type='^{UIImage=#^vf{?=b1b3b1b1b1b1}}' declared_type='UIImage*'/>
</method>
<method selector='initWithFrame:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='newFrame' index='0' declared_type='CGRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerBorderPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='layoutAndRenderInContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='logLayers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='maskingPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='masksToBorder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outerBorderPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='paddingBottom'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paddingLeft'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paddingRight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paddingTop'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pixelAlign'>
<retval type='v' declared_type='void'/>
</method>
<method selector='recursivelyRenderInContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renderAsVectorInContext:'>
<arg type='^{CGContext=}' name='context' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentsScale:'>
<arg type='f' name='contentsScale' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraph:'>
<arg type='@' name='graph' index='0' declared_type='CPTGraph*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInnerBorderPath:'>
<arg type='^{CGPath=}' name='innerBorderPath' index='0' declared_type='CGPathRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMasksToBorder:'>
<arg type='B' name='masksToBorder' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOuterBorderPath:'>
<arg type='^{CGPath=}' name='outerBorderPath' index='0' declared_type='CGPathRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingBottom:'>
<arg type='f' name='paddingBottom' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingLeft:'>
<arg type='f' name='paddingLeft' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingRight:'>
<arg type='f' name='paddingRight' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingTop:'>
<arg type='f' name='paddingTop' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadow:'>
<arg type='@' name='shadow' index='0' declared_type='CPTShadow*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='sublayerMarginLeft:top:right:bottom:'>
<arg type='^f' name='left' index='0' declared_type='CGFloat*'/>
<arg type='^f' name='top' index='1' declared_type='CGFloat*'/>
<arg type='^f' name='right' index='2' declared_type='CGFloat*'/>
<arg type='^f' name='bottom' index='3' declared_type='CGFloat*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sublayerMaskingPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='sublayersExcludedFromAutomaticLayout'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='useFastRendering'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTLayerAnnotation'>
<method selector='anchorLayer'>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='initWithAnchorLayer:'>
<arg type='@' name='anchorLayer' index='0' declared_type='CPTLayer*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rectAnchor'>
<retval type='i' declared_type='CPTRectAnchor'/>
</method>
<method selector='setRectAnchor:'>
<arg type='i' name='rectAnchor' index='0' declared_type='CPTRectAnchor'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTLegend'>
<method selector='addPlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allPlots'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='columnMargin'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='columnWidths'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='columnWidthsThatFit'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='equalColumns'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='equalRows'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithGraph:'>
<arg type='@' name='graph' index='0' declared_type='CPTGraph*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPlots:'>
<arg type='@' name='newPlots' index='0' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutChanged'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='legendWithGraph:'>
<arg type='@' name='graph' index='0' declared_type='CPTGraph*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='legendWithPlots:'>
<arg type='@' name='newPlots' index='0' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberOfColumns'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfRows'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='plotAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='plotWithIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='removePlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlotWithIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowHeights'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rowHeightsThatFit'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rowMargin'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setColumnMargin:'>
<arg type='f' name='columnMargin' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColumnWidths:'>
<arg type='@' name='columnWidths' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEqualColumns:'>
<arg type='B' name='equalColumns' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEqualRows:'>
<arg type='B' name='equalRows' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfColumns:'>
<arg type='I' name='numberOfColumns' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfRows:'>
<arg type='I' name='numberOfRows' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowHeights:'>
<arg type='@' name='rowHeights' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowMargin:'>
<arg type='f' name='rowMargin' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchBorderLineStyle:'>
<arg type='@' name='swatchBorderLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchCornerRadius:'>
<arg type='f' name='swatchCornerRadius' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchFill:'>
<arg type='@' name='swatchFill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchSize:'>
<arg type='{CGSize=ff}' name='swatchSize' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStyle:'>
<arg type='@' name='textStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleOffset:'>
<arg type='f' name='titleOffset' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='swatchBorderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='swatchCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='swatchFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='swatchSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='textStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='titleOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTLegendEntry'>
<method selector='column'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='drawTitleInRect:inContext:scale:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='1' declared_type='CGContextRef'/>
<arg type='f' name='scale' index='2' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='index'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='plot'>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='row'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setColumn:'>
<arg type='I' name='column' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRow:'>
<arg type='I' name='row' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStyle:'>
<arg type='@' name='textStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='titleSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CPTLimitBand'>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='initWithRange:fill:'>
<arg type='@' name='newRange' index='0' declared_type='CPTPlotRange*'/>
<arg type='@' name='newFill' index='1' declared_type='CPTFill*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='limitBandWithRange:fill:'>
<arg type='@' name='newRange' index='0' declared_type='CPTPlotRange*'/>
<arg type='@' name='newFill' index='1' declared_type='CPTFill*'/>
<retval type='@' declared_type='CPTLimitBand*'/>
</method>
<method selector='range'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='setFill:'>
<arg type='@' name='fill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRange:'>
<arg type='@' name='range' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTLineCap'>
<method class_method='true' selector='barPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='crossPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='customLineCapPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method class_method='true' selector='customLineCapWithPath:'>
<arg type='^{CGPath=}' name='aPath' index='0' declared_type='CGPathRef'/>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='diamondPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='ellipsePlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method class_method='true' selector='hexagonPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='lineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='lineCapType'>
<retval type='i' declared_type='CPTLineCapType'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method class_method='true' selector='openArrowPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='pentagonPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='rectanglePlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='renderAsVectorInContext:atPoint:inDirection:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<arg type='{CGPoint=ff}' name='center' index='1' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' name='direction' index='2' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomLineCapPath:'>
<arg type='^{CGPath=}' name='customLineCapPath' index='0' declared_type='CGPathRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' name='fill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineCapType:'>
<arg type='i' name='lineCapType' index='0' declared_type='CPTLineCapType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' name='lineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg type='{CGSize=ff}' name='size' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesEvenOddClipRule:'>
<arg type='B' name='usesEvenOddClipRule' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='snowPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='solidArrowPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method class_method='true' selector='sweptArrowPlotLineCap'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='usesEvenOddClipRule'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTLineStyle'>
<method selector='dashPattern'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='lineCap'>
<retval type='i' declared_type='CGLineCap'/>
</method>
<method selector='lineColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='lineJoin'>
<retval type='i' declared_type='CGLineJoin'/>
</method>
<method class_method='true' selector='lineStyle'>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='miterLimit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='patternPhase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setLineStyleInContext:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTMutableLineStyle'>
<method selector='dashPattern'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='lineCap'>
<retval type='i' declared_type='CGLineCap'/>
</method>
<method selector='lineColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='lineJoin'>
<retval type='i' declared_type='CGLineJoin'/>
</method>
<method selector='lineWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='miterLimit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='patternPhase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setDashPattern:'>
<arg type='@' name='dashPattern' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineCap:'>
<arg type='i' name='lineCap' index='0' declared_type='CGLineCap'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineColor:'>
<arg type='@' name='lineColor' index='0' declared_type='CPTColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineJoin:'>
<arg type='i' name='lineJoin' index='0' declared_type='CGLineJoin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineWidth:'>
<arg type='f' name='lineWidth' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMiterLimit:'>
<arg type='f' name='miterLimit' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPatternPhase:'>
<arg type='f' name='patternPhase' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTMutableNumericData'>
<method selector='byteOrder'>
<retval type='l' declared_type='CFByteOrder'/>
</method>
<method selector='convertToType:sampleBytes:byteOrder:'>
<arg type='i' name='newDataType' index='0' declared_type='CPTDataTypeFormat'/>
<arg type='L' name='newSampleBytes' index='1' declared_type='size_t'/>
<arg type='l' name='newByteOrder' index='2' declared_type='CFByteOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='dataTypeFormat'>
<retval type='i' declared_type='CPTDataTypeFormat'/>
</method>
<method selector='initWithData:dataType:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='1' declared_type='CPTNumericDataType'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableBytes'>
<retval type='^v' declared_type='void*'/>
</method>
<method class_method='true' selector='numericDataWithData:dataType:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='1' declared_type='CPTNumericDataType'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='CPTMutableNumericData*'/>
</method>
<method class_method='true' selector='numericDataWithData:dataTypeString:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='@' name='newDataTypeString' index='1' declared_type='NSString*'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='CPTMutableNumericData*'/>
</method>
<method selector='sampleBytes'>
<retval type='L' declared_type='size_t'/>
</method>
<method selector='setByteOrder:'>
<arg type='l' name='byteOrder' index='0' declared_type='CFByteOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataType:'>
<arg type='{_CPTNumericDataType=iIi}' name='dataType' index='0' declared_type='CPTNumericDataType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataTypeFormat:'>
<arg type='i' name='dataTypeFormat' index='0' declared_type='CPTDataTypeFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSampleBytes:'>
<arg type='L' name='sampleBytes' index='0' declared_type='size_t'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShape:'>
<arg type='@' name='shape' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='CPTMutablePlotRange'>
<method selector='expandRangeByFactor:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='factor' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectionPlotRange:'>
<arg type='@' name='otherRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='length'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='location'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='setLength:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='length' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocation:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='location' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftEndToFitInRange:'>
<arg type='@' name='otherRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftLocationToFitInRange:'>
<arg type='@' name='otherRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionPlotRange:'>
<arg type='@' name='otherRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTMutableShadow'>
<method selector='setShadowBlurRadius:'>
<arg type='f' name='shadowBlurRadius' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowColor:'>
<arg type='@' name='shadowColor' index='0' declared_type='CPTColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowOffset:'>
<arg type='{CGSize=ff}' name='shadowOffset' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadowBlurRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='shadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CPTMutableTextStyle'>
<method selector='color'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setColor:'>
<arg type='@' name='color' index='0' declared_type='CPTColor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg type='@' name='fontName' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg type='f' name='fontSize' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg type='i' name='textAlignment' index='0' declared_type='CPTTextAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='CPTTextAlignment'/>
</method>
</class>
<class name='CPTNumericData'>
<method selector='byteOrder'>
<retval type='l' declared_type='CFByteOrder'/>
</method>
<method selector='bytes'>
<retval type='^v' declared_type='void*' const='true'/>
</method>
<method selector='convertData:dataType:toData:dataType:'>
<arg type='@' name='sourceData' index='0' declared_type='NSData*'/>
<arg type='^{_CPTNumericDataType=iIi}' name='sourceDataType' index='1' declared_type='CPTNumericDataType*'/>
<arg type='@' name='destData' index='2' declared_type='NSMutableData*'/>
<arg type='^{_CPTNumericDataType=iIi}' name='destDataType' index='3' declared_type='CPTNumericDataType*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataByConvertingToDataType:'>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='0' declared_type='CPTNumericDataType'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataByConvertingToType:sampleBytes:byteOrder:'>
<arg type='i' name='newDataType' index='0' declared_type='CPTDataTypeFormat'/>
<arg type='L' name='newSampleBytes' index='1' declared_type='size_t'/>
<arg type='l' name='newByteOrder' index='2' declared_type='CFByteOrder'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='dataTypeFormat'>
<retval type='i' declared_type='CPTDataTypeFormat'/>
</method>
<method selector='initWithArray:dataType:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSArray*'/>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='1' declared_type='CPTNumericDataType'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:dataTypeString:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSArray*'/>
<arg type='@' name='newDataTypeString' index='1' declared_type='NSString*'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:dataType:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='1' declared_type='CPTNumericDataType'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:dataTypeString:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='@' name='newDataTypeString' index='1' declared_type='NSString*'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='length'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfDimensions'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfSamples'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='numericDataWithArray:dataType:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSArray*'/>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='1' declared_type='CPTNumericDataType'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method class_method='true' selector='numericDataWithArray:dataTypeString:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSArray*'/>
<arg type='@' name='newDataTypeString' index='1' declared_type='NSString*'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method class_method='true' selector='numericDataWithData:dataType:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='{_CPTNumericDataType=iIi}' name='newDataType' index='1' declared_type='CPTNumericDataType'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method class_method='true' selector='numericDataWithData:dataTypeString:shape:'>
<arg type='@' name='newData' index='0' declared_type='NSData*'/>
<arg type='@' name='newDataTypeString' index='1' declared_type='NSString*'/>
<arg type='@' name='shapeArray' index='2' declared_type='NSArray*'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='sampleArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sampleBytes'>
<retval type='L' declared_type='size_t'/>
</method>
<method selector='samplePointer:'>
<arg type='I' name='sample' index='0' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='sampleValue:'>
<arg type='I' name='sample' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='swapByteOrderForData:sampleSize:'>
<arg type='@' name='sourceData' index='0' declared_type='NSMutableData*'/>
<arg type='L' name='sampleSize' index='1' declared_type='size_t'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPieChart'>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='centerAnchor'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method class_method='true' selector='defaultPieSliceColorForIndex:'>
<arg type='I' name='pieSliceIndex' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='overlayFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='pieInnerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pieRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' name='borderLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenterAnchor:'>
<arg type='{CGPoint=ff}' name='centerAnchor' index='0' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOverlayFill:'>
<arg type='@' name='overlayFill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPieInnerRadius:'>
<arg type='f' name='pieInnerRadius' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPieRadius:'>
<arg type='f' name='pieRadius' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSliceDirection:'>
<arg type='i' name='sliceDirection' index='0' declared_type='CPTPieDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartAngle:'>
<arg type='f' name='startAngle' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sliceDirection'>
<retval type='i' declared_type='CPTPieDirection'/>
</method>
<method selector='startAngle'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTPlot'>
<method selector='alignsPointsToPixels'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cacheNumbers:forField:'>
<arg type='@' name='numbers' index='0' declared_type='id'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cacheNumbers:forField:atRecordIndex:'>
<arg type='@' name='numbers' index='0' declared_type='id'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='I' name='index' index='2' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cachePrecision'>
<retval type='i' declared_type='CPTPlotCachePrecision'/>
</method>
<method selector='cachedDataCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='cachedDecimalForField:recordIndex:'>
<arg type='I' name='fieldEnum' index='0' declared_type='NSUInteger'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='cachedDoubleForField:recordIndex:'>
<arg type='I' name='fieldEnum' index='0' declared_type='NSUInteger'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='cachedNumberForField:recordIndex:'>
<arg type='I' name='fieldEnum' index='0' declared_type='NSUInteger'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='cachedNumbersForField:'>
<arg type='I' name='fieldEnum' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTMutableNumericData*'/>
</method>
<method selector='dataNeedsReloading'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalDataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='deleteDataInIndexRange:'>
<arg type='{_NSRange=II}' name='indexRange' index='0' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doubleDataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='doublePrecisionCache'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawSwatchForLegend:atIndex:inRect:inContext:'>
<arg type='@' name='legend' index='0' declared_type='CPTLegend*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='2' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='3' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fieldIdentifiers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fieldIdentifiersForCoordinate:'>
<arg type='i' name='coord' index='0' declared_type='CPTCoordinate'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='insertDataAtIndex:numberOfRecords:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<arg type='I' name='numberOfRecords' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='labelField'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='labelFormatter'>
<retval type='@' declared_type='NSNumberFormatter*'/>
</method>
<method selector='labelOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelShadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='labelTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='needsRelabel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfFields'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfLegendEntries'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numbersFromDataSourceForField:recordIndexRange:'>
<arg type='I' name='fieldEnum' index='0' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='1' declared_type='NSRange'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='plotRangeForCoordinate:'>
<arg type='i' name='coord' index='0' declared_type='CPTCoordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotRangeForField:'>
<arg type='I' name='fieldEnum' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='positionLabelAnnotation:forIndex:'>
<arg type='@' name='label' index='0' declared_type='CPTPlotSpaceAnnotation*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='relabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='relabelIndexRange:'>
<arg type='{_NSRange=II}' name='indexRange' index='0' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataInIndexRange:'>
<arg type='{_NSRange=II}' name='indexRange' index='0' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='repositionAllLabelAnnotations'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignsPointsToPixels:'>
<arg type='B' name='alignsPointsToPixels' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachePrecision:'>
<arg type='i' name='cachePrecision' index='0' declared_type='CPTPlotCachePrecision'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataNeedsReloading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg type='@' name='dataSource' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelField:'>
<arg type='I' name='labelField' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelFormatter:'>
<arg type='@' name='labelFormatter' index='0' declared_type='NSNumberFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelOffset:'>
<arg type='f' name='labelOffset' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelRotation:'>
<arg type='f' name='labelRotation' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelShadow:'>
<arg type='@' name='labelShadow' index='0' declared_type='CPTShadow*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelTextStyle:'>
<arg type='@' name='labelTextStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsRelabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSpace:'>
<arg type='@' name='plotSpace' index='0' declared_type='CPTPlotSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' name='title' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleForLegendEntryAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CPTPlotArea'>
<method selector='axisLabelGroup'>
<retval type='@' declared_type='CPTAxisLabelGroup*'/>
</method>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='axisTitleGroup'>
<retval type='@' declared_type='CPTAxisLabelGroup*'/>
</method>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='majorGridLineGroup'>
<retval type='@' declared_type='CPTGridLineGroup*'/>
</method>
<method selector='minorGridLineGroup'>
<retval type='@' declared_type='CPTGridLineGroup*'/>
</method>
<method selector='plotGroup'>
<retval type='@' declared_type='CPTPlotGroup*'/>
</method>
<method selector='setAxisLabelGroup:'>
<arg type='@' name='axisLabelGroup' index='0' declared_type='CPTAxisLabelGroup*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisSet:'>
<arg type='@' name='axisSet' index='0' declared_type='CPTAxisSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisSetLayersForType:'>
<arg type='i' name='layerType' index='0' declared_type='CPTGraphLayerType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisTitleGroup:'>
<arg type='@' name='axisTitleGroup' index='0' declared_type='CPTAxisLabelGroup*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' name='borderLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' name='fill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorGridLineGroup:'>
<arg type='@' name='majorGridLineGroup' index='0' declared_type='CPTGridLineGroup*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorGridLineGroup:'>
<arg type='@' name='minorGridLineGroup' index='0' declared_type='CPTGridLineGroup*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotGroup:'>
<arg type='@' name='plotGroup' index='0' declared_type='CPTPlotGroup*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopDownLayerOrder:'>
<arg type='@' name='topDownLayerOrder' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sublayerIndexForAxis:layerType:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<arg type='i' name='layerType' index='1' declared_type='CPTGraphLayerType'/>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='topDownLayerOrder'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='updateAxisSetLayersForType:'>
<arg type='i' name='layerType' index='0' declared_type='CPTGraphLayerType'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotAreaFrame'>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='plotGroup'>
<retval type='@' declared_type='CPTPlotGroup*'/>
</method>
<method selector='setAxisSet:'>
<arg type='@' name='axisSet' index='0' declared_type='CPTAxisSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotGroup:'>
<arg type='@' name='plotGroup' index='0' declared_type='CPTPlotGroup*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotGroup'>
<method selector='addPlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotRange'>
<method selector='compareToDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='number' index='0' declared_type='NSDecimal'/>
<retval type='i' declared_type='CPTPlotRangeComparisonResult'/>
</method>
<method selector='compareToDouble:'>
<arg type='d' name='number' index='0' declared_type='double'/>
<retval type='i' declared_type='CPTPlotRangeComparisonResult'/>
</method>
<method selector='compareToNumber:'>
<arg type='@' name='number' index='0' declared_type='NSNumber*'/>
<retval type='i' declared_type='CPTPlotRangeComparisonResult'/>
</method>
<method selector='contains:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='number' index='0' declared_type='NSDecimal'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsDouble:'>
<arg type='d' name='number' index='0' declared_type='double'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='end'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='endDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='initWithLocation:length:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='loc' index='0' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='len' index='1' declared_type='NSDecimal'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToRange:'>
<arg type='@' name='otherRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='lengthDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='location'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='locationDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='maxLimit'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='maxLimitDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='midPoint'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='midPointDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minLimit'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='minLimitDouble'>
<retval type='d' declared_type='double'/>
</method>
<method class_method='true' selector='plotRangeWithLocation:length:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='loc' index='0' declared_type='NSDecimal'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='len' index='1' declared_type='NSDecimal'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTPlotSpace'>
<method selector='allowsUserInteraction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='doublePrecisionPlotPoint:forPlotAreaViewPoint:'>
<arg type='^d' name='plotPoint' index='0' declared_type='double*'/>
<arg type='{CGPoint=ff}' name='point' index='1' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='graph'>
<retval type='@' declared_type='CPTGraph*'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='plotAreaViewPointForDoublePrecisionPlotPoint:'>
<arg type='^d' name='plotPoint' index='0' declared_type='double*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotAreaViewPointForPlotPoint:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='plotPoint' index='0' declared_type='NSDecimal*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotPoint:forPlotAreaViewPoint:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' name='plotPoint' index='0' declared_type='NSDecimal*'/>
<arg type='{CGPoint=ff}' name='point' index='1' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotRangeForCoordinate:'>
<arg type='i' name='coordinate' index='0' declared_type='CPTCoordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='scaleBy:aboutPoint:'>
<arg type='f' name='interactionScale' index='0' declared_type='CGFloat'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleToFitPlots:'>
<arg type='@' name='plots' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleTypeForCoordinate:'>
<arg type='i' name='coordinate' index='0' declared_type='CPTCoordinate'/>
<retval type='i' declared_type='CPTScaleType'/>
</method>
<method selector='setAllowsUserInteraction:'>
<arg type='B' name='allowsUserInteraction' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraph:'>
<arg type='@' name='graph' index='0' declared_type='CPTGraph*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg type='@' name='identifier' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotRange:forCoordinate:'>
<arg type='@' name='newRange' index='0' declared_type='CPTPlotRange*'/>
<arg type='i' name='coordinate' index='1' declared_type='CPTCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleType:forCoordinate:'>
<arg type='i' name='newType' index='0' declared_type='CPTScaleType'/>
<arg type='i' name='coordinate' index='1' declared_type='CPTCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotSpaceAnnotation'>
<method selector='anchorPlotPoint'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithPlotSpace:anchorPlotPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='plotPoint' index='1' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='plotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='setAnchorPlotPoint:'>
<arg type='@' name='anchorPlotPoint' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotSymbol'>
<method class_method='true' selector='crossPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='customPlotSymbolWithPath:'>
<arg type='^{CGPath=}' name='aPath' index='0' declared_type='CGPathRef'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='customSymbolPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method class_method='true' selector='dashPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='diamondPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='ellipsePlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method class_method='true' selector='hexagonPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method class_method='true' selector='pentagonPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='plotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='plusPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='rectanglePlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='renderAsVectorInContext:atPoint:scale:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<arg type='{CGPoint=ff}' name='center' index='1' declared_type='CGPoint'/>
<arg type='f' name='scale' index='2' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renderInContext:atPoint:scale:alignToPixels:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<arg type='{CGPoint=ff}' name='center' index='1' declared_type='CGPoint'/>
<arg type='f' name='scale' index='2' declared_type='CGFloat'/>
<arg type='B' name='alignToPixels' index='3' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomSymbolPath:'>
<arg type='^{CGPath=}' name='customSymbolPath' index='0' declared_type='CGPathRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' name='fill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' name='lineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadow:'>
<arg type='@' name='shadow' index='0' declared_type='CPTShadow*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg type='{CGSize=ff}' name='size' index='0' declared_type='CGSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSymbolType:'>
<arg type='i' name='symbolType' index='0' declared_type='CPTPlotSymbolType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesEvenOddClipRule:'>
<arg type='B' name='usesEvenOddClipRule' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method class_method='true' selector='snowPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method class_method='true' selector='starPlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='symbolType'>
<retval type='i' declared_type='CPTPlotSymbolType'/>
</method>
<method class_method='true' selector='trianglePlotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='usesEvenOddClipRule'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTRangePlot'>
<method selector='areaFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='barLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='gapHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='gapWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAreaFill:'>
<arg type='@' name='areaFill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarLineStyle:'>
<arg type='@' name='barLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidth:'>
<arg type='f' name='barWidth' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGapHeight:'>
<arg type='f' name='gapHeight' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGapWidth:'>
<arg type='f' name='gapWidth' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTScatterPlot'>
<method selector='areaBaseValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='areaBaseValue2'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='areaFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='areaFill2'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='dataLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='indexOfVisiblePointClosestToPlotAreaPoint:'>
<arg type='{CGPoint=ff}' name='viewPoint' index='0' declared_type='CGPoint'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='interpolation'>
<retval type='i' declared_type='CPTScatterPlotInterpolation'/>
</method>
<method selector='plotAreaPointOfVisiblePointAtIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='plotSymbolForRecordIndex:'>
<arg type='I' name='index' index='0' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='plotSymbolMarginForHitDetection'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAreaBaseValue2:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='areaBaseValue2' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAreaBaseValue:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='areaBaseValue' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAreaFill2:'>
<arg type='@' name='areaFill2' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAreaFill:'>
<arg type='@' name='areaFill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataLineStyle:'>
<arg type='@' name='dataLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterpolation:'>
<arg type='i' name='interpolation' index='0' declared_type='CPTScatterPlotInterpolation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSymbol:'>
<arg type='@' name='plotSymbol' index='0' declared_type='CPTPlotSymbol*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSymbolMarginForHitDetection:'>
<arg type='f' name='plotSymbolMarginForHitDetection' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTShadow'>
<method selector='setShadowInContext:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='shadow'>
<retval type='@' declared_type='id'/>
</method>
<method selector='shadowBlurRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='shadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CPTTextLayer'>
<method selector='initWithText:'>
<arg type='@' name='newText' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithText:style:'>
<arg type='@' name='newText' index='0' declared_type='NSString*'/>
<arg type='@' name='newStyle' index='1' declared_type='CPTTextStyle*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setText:'>
<arg type='@' name='text' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStyle:'>
<arg type='@' name='textStyle' index='0' declared_type='CPTTextStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeThatFits'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
</class>
<class name='CPTTextStyle'>
<method selector='color'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='CPTTextAlignment'/>
</method>
<method class_method='true' selector='textStyle'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTTheme'>
<method selector='applyThemeToAxisSet:'>
<arg type='@' name='axisSet' index='0' declared_type='CPTAxisSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyThemeToBackground:'>
<arg type='@' name='graph' index='0' declared_type='CPTGraph*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyThemeToGraph:'>
<arg type='@' name='graph' index='0' declared_type='CPTGraph*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyThemeToPlotArea:'>
<arg type='@' name='plotAreaFrame' index='0' declared_type='CPTPlotAreaFrame*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='graphClass'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='newGraph'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='registerTheme:'>
<arg type='#' name='themeClass' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraphClass:'>
<arg type='#' name='graphClass' index='0' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='themeClasses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='themeNamed:'>
<arg type='@' name='theme' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='CPTTheme*'/>
</method>
</class>
<class name='CPTTimeFormatter'>
<method selector='dateFormatter'>
<retval type='@' declared_type='NSDateFormatter*'/>
</method>
<method selector='initWithDateFormatter:'>
<arg type='@' name='aDateFormatter' index='0' declared_type='NSDateFormatter*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='referenceDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='setDateFormatter:'>
<arg type='@' name='dateFormatter' index='0' declared_type='NSDateFormatter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReferenceDate:'>
<arg type='@' name='referenceDate' index='0' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTTradingRangePlot'>
<method selector='barCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='decreaseFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='decreaseLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='increaseFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='increaseLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='plotStyle'>
<retval type='i' declared_type='CPTTradingRangePlotStyle'/>
</method>
<method selector='setBarCornerRadius:'>
<arg type='f' name='barCornerRadius' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidth:'>
<arg type='f' name='barWidth' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecreaseFill:'>
<arg type='@' name='decreaseFill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecreaseLineStyle:'>
<arg type='@' name='decreaseLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncreaseFill:'>
<arg type='@' name='increaseFill' index='0' declared_type='CPTFill*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncreaseLineStyle:'>
<arg type='@' name='increaseLineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' name='lineStyle' index='0' declared_type='CPTLineStyle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotStyle:'>
<arg type='i' name='plotStyle' index='0' declared_type='CPTTradingRangePlotStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStickLength:'>
<arg type='f' name='stickLength' index='0' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stickLength'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTXYAxis'>
<method selector='axisConstraints'>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method selector='orthogonalCoordinateDecimal'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='setAxisConstraints:'>
<arg type='@' name='axisConstraints' index='0' declared_type='CPTConstraints*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrthogonalCoordinateDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='orthogonalCoordinateDecimal' index='0' declared_type='NSDecimal'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTXYAxisSet'>
<method selector='xAxis'>
<retval type='@' declared_type='CPTXYAxis*'/>
</method>
<method selector='yAxis'>
<retval type='@' declared_type='CPTXYAxis*'/>
</method>
</class>
<class name='CPTXYGraph'>
<method selector='initWithFrame:xScaleType:yScaleType:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='newFrame' index='0' declared_type='CGRect'/>
<arg type='i' name='newXScaleType' index='1' declared_type='CPTScaleType'/>
<arg type='i' name='newYScaleType' index='2' declared_type='CPTScaleType'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTXYPlotSpace'>
<method selector='globalXRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='globalYRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='setGlobalXRange:'>
<arg type='@' name='globalXRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlobalYRange:'>
<arg type='@' name='globalYRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setXRange:'>
<arg type='@' name='xRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setXScaleType:'>
<arg type='i' name='xScaleType' index='0' declared_type='CPTScaleType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYRange:'>
<arg type='@' name='yRange' index='0' declared_type='CPTPlotRange*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYScaleType:'>
<arg type='i' name='yScaleType' index='0' declared_type='CPTScaleType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='xRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='xScaleType'>
<retval type='i' declared_type='CPTScaleType'/>
</method>
<method selector='yRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='yScaleType'>
<retval type='i' declared_type='CPTScaleType'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGFloatForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='decodeCPTPointForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='decodeCPTRectForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='decodeCPTSizeForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='decodeDecimalForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='encodeCGColorSpace:forKey:'>
<arg type='^{CGColorSpace=}' name='colorSpace' index='0' declared_type='CGColorSpaceRef'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGFloat:forKey:'>
<arg type='f' name='number' index='0' declared_type='CGFloat'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGImage:forKey:'>
<arg type='^{CGImage=}' name='image' index='0' declared_type='CGImageRef'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGPath:forKey:'>
<arg type='^{CGPath=}' name='path' index='0' declared_type='CGPathRef'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCPTPoint:forKey:'>
<arg type='{CGPoint=ff}' name='point' index='0' declared_type='CGPoint'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCPTRect:forKey:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='0' declared_type='CGRect'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCPTSize:forKey:'>
<arg type='{CGSize=ff}' name='size' index='0' declared_type='CGSize'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDecimal:forKey:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' name='number' index='0' declared_type='NSDecimal'/>
<arg type='@' name='key' index='1' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='newCGColorSpaceDecodeForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='^{CGColorSpace=}' declared_type='CGColorSpaceRef'/>
</method>
<method selector='newCGImageDecodeForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='newCGPathDecodeForKey:'>
<arg type='@' name='key' index='0' declared_type='NSString*'/>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
</class>
<class name='NSNumber'>
<method selector='cgFloatValue'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='decimalNumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='initWithCGFloat:'>
<arg type='f' name='number' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isGreaterThan:'>
<arg type='@' name='other' index='0' declared_type='NSNumber*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<arg type='@' name='other' index='0' declared_type='NSNumber*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThan:'>
<arg type='@' name='other' index='0' declared_type='NSNumber*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<arg type='@' name='other' index='0' declared_type='NSNumber*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='numberWithCGFloat:'>
<arg type='f' name='number' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
</class>
<class name='NSObject'>
<method selector='axis:shouldUpdateAxisLabelsAtLocations:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<arg type='@' name='locations' index='1' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='axis:shouldUpdateMinorAxisLabelsAtLocations:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<arg type='@' name='locations' index='1' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='axisDidRelabel:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='axisShouldRelabel:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='barFillForBarPlot:recordIndex:'>
<arg type='@' name='barPlot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='barLineStyleForBarPlot:recordIndex:'>
<arg type='@' name='barPlot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataForPlot:field:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='2' declared_type='NSRange'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataLabelForPlot:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='doubleForPlot:field:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='I' name='index' index='2' declared_type='NSUInteger'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='doublesForPlot:field:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='2' declared_type='NSRange'/>
<retval type='^d' declared_type='double*'/>
</method>
<method selector='legend:shouldDrawSwatchAtIndex:forPlot:inRect:inContext:'>
<arg type='@' name='legend' index='0' declared_type='CPTLegend*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<arg type='@' name='plot' index='2' declared_type='CPTPlot*'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='3' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='4' declared_type='CGContextRef'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='legendTitleForBarPlot:recordIndex:'>
<arg type='@' name='barPlot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='legendTitleForPieChart:recordIndex:'>
<arg type='@' name='pieChart' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberForPlot:field:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='I' name='index' index='2' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberOfRecordsForPlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numbersForPlot:field:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='2' declared_type='NSRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotSpace:didChangePlotRangeForCoordinate:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='i' name='coordinate' index='1' declared_type='CPTCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceCancelledEvent:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDownEvent:atPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<arg type='{CGPoint=ff}' name='point' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDraggedEvent:atPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<arg type='{CGPoint=ff}' name='point' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceUpEvent:atPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<arg type='{CGPoint=ff}' name='point' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldScaleBy:aboutPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='f' name='interactionScale' index='1' declared_type='CGFloat'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:willChangePlotRangeTo:forCoordinate:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='newRange' index='1' declared_type='CPTPlotRange*'/>
<arg type='i' name='coordinate' index='2' declared_type='CPTCoordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotSpace:willDisplaceBy:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='{CGPoint=ff}' name='proposedDisplacementVector' index='1' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='pointingDeviceCancelledEvent:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceDownEvent:atPoint:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceDraggedEvent:atPoint:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceUpEvent:atPoint:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='radialOffsetForPieChart:recordIndex:'>
<arg type='@' name='pieChart' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTScatterPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sliceFillForPieChart:recordIndex:'>
<arg type='@' name='pieChart' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='symbolForScatterPlot:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTScatterPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='symbolsForScatterPlot:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTScatterPlot*'/>
<arg type='{_NSRange=II}' name='indexRange' index='1' declared_type='NSRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSString'>
<method selector='drawInRect:withTextStyle:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='0' declared_type='CGRect'/>
<arg type='@' name='style' index='1' declared_type='CPTTextStyle*'/>
<arg type='^{CGContext=}' name='context' index='2' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeWithTextStyle:'>
<arg type='@' name='style' index='0' declared_type='CPTTextStyle*'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='_CPTConstraintsFixed'>
<method selector='initWithLowerOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUpperOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToConstraint:'>
<arg type='@' name='otherConstraint' index='0' declared_type='CPTConstraints*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg type='f' name='lowerBound' index='0' declared_type='CGFloat'/>
<arg type='f' name='upperBound' index='1' declared_type='CGFloat'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='_CPTConstraintsRelative'>
<method selector='initWithRelativeOffset:'>
<arg type='f' name='newOffset' index='0' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToConstraint:'>
<arg type='@' name='otherConstraint' index='0' declared_type='CPTConstraints*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg type='f' name='lowerBound' index='0' declared_type='CGFloat'/>
<arg type='f' name='upperBound' index='1' declared_type='CGFloat'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='_CPTFillColor'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='theRect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='theContext' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithColor:'>
<arg type='@' name='aCcolor' index='0' declared_type='CPTColor*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='_CPTFillGradient'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='theRect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='theContext' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithGradient:'>
<arg type='@' name='aGradient' index='0' declared_type='CPTGradient*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='_CPTFillImage'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' name='theContext' index='0' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='theRect' index='0' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='theContext' index='1' declared_type='CGContextRef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithImage:'>
<arg type='@' name='anImage' index='0' declared_type='CPTImage*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<informal_protocol name='CPTAxisDelegate'>
<method type='B16@0:4@8@12' selector='axis:shouldUpdateAxisLabelsAtLocations:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<arg type='@' name='locations' index='1' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B16@0:4@8@12' selector='axis:shouldUpdateMinorAxisLabelsAtLocations:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<arg type='@' name='locations' index='1' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4@8' selector='axisDidRelabel:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B12@0:4@8' selector='axisShouldRelabel:'>
<arg type='@' name='axis' index='0' declared_type='CPTAxis*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CPTBarPlotDataSource'>
<method type='@16@0:4@8I12' selector='barFillForBarPlot:recordIndex:'>
<arg type='@' name='barPlot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method type='@16@0:4@8I12' selector='barLineStyleForBarPlot:recordIndex:'>
<arg type='@' name='barPlot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method type='@16@0:4@8I12' selector='legendTitleForBarPlot:recordIndex:'>
<arg type='@' name='barPlot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTBarPlotDelegate'>
<method type='v16@0:4@8I12' selector='barPlot:barWasSelectedAtRecordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTBarPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTLegendDelegate'>
<method type='B40@0:4@8I12@16{CGRect={CGPoint=ff}{CGSize=ff}}20^{CGContext=}36' selector='legend:shouldDrawSwatchAtIndex:forPlot:inRect:inContext:'>
<arg type='@' name='legend' index='0' declared_type='CPTLegend*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<arg type='@' name='plot' index='2' declared_type='CPTPlot*'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' name='rect' index='3' declared_type='CGRect'/>
<arg type='^{CGContext=}' name='context' index='4' declared_type='CGContextRef'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPieChartDataSource'>
<method type='@16@0:4@8I12' selector='legendTitleForPieChart:recordIndex:'>
<arg type='@' name='pieChart' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type='f16@0:4@8I12' selector='radialOffsetForPieChart:recordIndex:'>
<arg type='@' name='pieChart' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method type='@16@0:4@8I12' selector='sliceFillForPieChart:recordIndex:'>
<arg type='@' name='pieChart' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPieChartDelegate'>
<method type='v16@0:4@8I12' selector='pieChart:sliceWasSelectedAtRecordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPieChart*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotDataSource'>
<method type='@24@0:4@8I12{_NSRange=II}16' selector='dataForPlot:field:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='2' declared_type='NSRange'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method type='@16@0:4@8I12' selector='dataLabelForPlot:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method type='d20@0:4@8I12I16' selector='doubleForPlot:field:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='I' name='index' index='2' declared_type='NSUInteger'/>
<retval type='d' declared_type='double'/>
</method>
<method type='^d24@0:4@8I12{_NSRange=II}16' selector='doublesForPlot:field:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='2' declared_type='NSRange'/>
<retval type='^d' declared_type='double*'/>
</method>
<method type='@20@0:4@8I12I16' selector='numberForPlot:field:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='I' name='index' index='2' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method type='I12@0:4@8' selector='numberOfRecordsForPlot:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method type='@24@0:4@8I12{_NSRange=II}16' selector='numbersForPlot:field:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTPlot*'/>
<arg type='I' name='fieldEnum' index='1' declared_type='NSUInteger'/>
<arg type='{_NSRange=II}' name='indexRange' index='2' declared_type='NSRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotSpaceDelegate'>
<method type='v16@0:4@8i12' selector='plotSpace:didChangePlotRangeForCoordinate:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='i' name='coordinate' index='1' declared_type='CPTCoordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method type='B16@0:4@8@12' selector='plotSpace:shouldHandlePointingDeviceCancelledEvent:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12{CGPoint=ff}16' selector='plotSpace:shouldHandlePointingDeviceDownEvent:atPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<arg type='{CGPoint=ff}' name='point' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12{CGPoint=ff}16' selector='plotSpace:shouldHandlePointingDeviceDraggedEvent:atPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<arg type='{CGPoint=ff}' name='point' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8@12{CGPoint=ff}16' selector='plotSpace:shouldHandlePointingDeviceUpEvent:atPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='event' index='1' declared_type='id'/>
<arg type='{CGPoint=ff}' name='point' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B24@0:4@8f12{CGPoint=ff}16' selector='plotSpace:shouldScaleBy:aboutPoint:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='f' name='interactionScale' index='1' declared_type='CGFloat'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='2' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='@20@0:4@8@12i16' selector='plotSpace:willChangePlotRangeTo:forCoordinate:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='@' name='newRange' index='1' declared_type='CPTPlotRange*'/>
<arg type='i' name='coordinate' index='2' declared_type='CPTCoordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method type='{CGPoint=ff}20@0:4@8{CGPoint=ff}12' selector='plotSpace:willDisplaceBy:'>
<arg type='@' name='space' index='0' declared_type='CPTPlotSpace*'/>
<arg type='{CGPoint=ff}' name='proposedDisplacementVector' index='1' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</informal_protocol>
<informal_protocol name='CPTResponder'>
<method type='B12@0:4@8' selector='pointingDeviceCancelledEvent:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8{CGPoint=ff}12' selector='pointingDeviceDownEvent:atPoint:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8{CGPoint=ff}12' selector='pointingDeviceDraggedEvent:atPoint:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B20@0:4@8{CGPoint=ff}12' selector='pointingDeviceUpEvent:atPoint:'>
<arg type='@' name='event' index='0' declared_type='id'/>
<arg type='{CGPoint=ff}' name='interactionPoint' index='1' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CPTScatterPlotDataSource'>
<method type='@16@0:4@8I12' selector='symbolForScatterPlot:recordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTScatterPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method type='@20@0:4@8{_NSRange=II}12' selector='symbolsForScatterPlot:recordIndexRange:'>
<arg type='@' name='plot' index='0' declared_type='CPTScatterPlot*'/>
<arg type='{_NSRange=II}' name='indexRange' index='1' declared_type='NSRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTScatterPlotDelegate'>
<method type='v16@0:4@8I12' selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:'>
<arg type='@' name='plot' index='0' declared_type='CPTScatterPlot*'/>
<arg type='I' name='index' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
